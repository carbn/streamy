worker_processes  1;

events {
    worker_connections 1024;
}

http {
    default_type  application/octet-stream;

    keepalive_timeout  65;

    server {
        listen 8000;

        location /live {
            flv_live on;
        }

        location /internal/ {
            # this gludge is needed for the on_x callbacks to continue working after backend was temporarily down
            resolver 127.0.0.11 valid=30s;
            set $upstream backend;

            proxy_pass http://$upstream:8000;

            allow 127.0.0.1;
            deny all;

            access_log off;
        }
    }
}

rtmp {
    out_queue           4096;
    out_cork            8;
    max_streams         128;
    timeout             15s;
    drop_idle_publisher 15s;

    server {
        listen 1935;

        application app {
            live on;

            allow publish all;
            deny play all;

            on_publish http://localhost:8000/internal/on_publish;
            on_update http://localhost:8000/internal/on_update;
            on_publish_done http://localhost:8000/internal/on_publish_done;

            notify_update_strict on;
            notify_update_timeout 5s;
        }

        application live {
            live on;

            allow publish 127.0.0.1;
            deny publish all;

            exec_publish sh -c '/bin/update_meta.sh rtmp://localhost/live/$name http://localhost:8000/internal/update_meta/$name';

            recorder thumbnail {
                record keyframes;
                record_max_frames 1;
                record_path /thumbs;
                record_interval 30s;

                exec_record_done ffmpeg -i $path -vframes 1 -an -s 426x240 -q:v 5 -y /thumbs/$name.jpg;
            }
        }
    }
}
